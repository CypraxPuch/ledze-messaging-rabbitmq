package com.ledzedev;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.amqp.rabbit.core.RabbitTemplate;
import org.springframework.boot.CommandLineRunner;
import org.springframework.context.ConfigurableApplicationContext;
import org.springframework.stereotype.Component;

import java.util.concurrent.TimeUnit;

/**
 * Source code generated by Gerado Pucheta Figueroa
 * Twitter: @ledzedev
 * http://ledze.mx
 * 1/20/2017
 */
@Component
public class LedzeMandaMensajes implements CommandLineRunner {

    private static Logger log = LoggerFactory.getLogger(LedzeMandaMensajes.class);

    private final RabbitTemplate rabbitTemplate;
    private final Receptor receptor;
    private final ConfigurableApplicationContext contexto;

    public LedzeMandaMensajes(RabbitTemplate rabbitTemplate, Receptor receptor, ConfigurableApplicationContext contexto) {
        this.rabbitTemplate = rabbitTemplate;
        this.receptor = receptor;
        this.contexto = contexto;
    }

    @Override
    public void run(String... strings) throws Exception {
        log.info("Enviando mensaje a la cola de mensajer√≠a...");
        rabbitTemplate.convertAndSend("ledze-spring-boot", "Hola desde RabbitMQ");

        //Solo se agrega este contador para darle mas sentido al ejemplo, pero no se recomienda en un ambiente productivo.
        receptor.getLatch().await(10000, TimeUnit.MILLISECONDS);

        contexto.close();
    }
}
