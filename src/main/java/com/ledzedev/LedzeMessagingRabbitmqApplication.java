package com.ledzedev;

import org.springframework.amqp.core.Binding;
import org.springframework.amqp.core.BindingBuilder;
import org.springframework.amqp.core.Queue;
import org.springframework.amqp.core.TopicExchange;
import org.springframework.amqp.rabbit.connection.ConnectionFactory;
import org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer;
import org.springframework.amqp.rabbit.listener.adapter.MessageListenerAdapter;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.context.annotation.Bean;

/**
 * Source code generated by Gerado Pucheta Figueroa
 * Twitter: @ledzedev
 * http://ledze.mx
 * 1/20/2017
 */
@SpringBootApplication
public class LedzeMessagingRabbitmqApplication {

	public static void main(String[] args) {
		SpringApplication.run(LedzeMessagingRabbitmqApplication.class, args);
	}

	@Autowired
	private LedzeMandaMensajes ledzeMandaMensajes;

	final static String nombreCola = "ledze-spring-boot";

	/*
	Spring AMQP requiere que los objetos Queue, TopicExchange y Binding sean creados como beans de Spring de alto nivel
	 para que sean configurados apropiadamente.
	*/

	@Bean
	Queue cola(){
		return new Queue(nombreCola, false);
	}

	@Bean
	TopicExchange exchange(){
		return new TopicExchange("ledze-spring-boot-exchange");
	}

	@Bean
	Binding relaciona(Queue cola, TopicExchange topicExchange){
		return BindingBuilder.bind(cola).to(topicExchange).with(nombreCola);
	}

	@Bean
	SimpleMessageListenerContainer contenedor(ConnectionFactory connectionFactory, MessageListenerAdapter messageListenerAdapter){
		SimpleMessageListenerContainer contenedor = new SimpleMessageListenerContainer();
		contenedor.setConnectionFactory(connectionFactory);
		contenedor.setQueueNames(nombreCola);
		contenedor.setMessageListener(messageListenerAdapter);

		return contenedor;
	}

	@Bean
	MessageListenerAdapter listenerAdapter(Receptor receptor){
		return new MessageListenerAdapter(receptor, "recibirMensaje");//m√©todo escuchador por defecto
	}
}
